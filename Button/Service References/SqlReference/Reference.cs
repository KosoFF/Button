//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.VisualStudio.ServiceReference.Platforms, version 14.0.23107.0
// 
namespace Button.SqlReference {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccountInformation", Namespace="http://schemas.datacontract.org/2004/07/SqlService")]
    public partial class AccountInformation : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string AccountIDField;
        
        private string EmailField;
        
        private System.Nullable<bool> EmailConfirmedField;
        
        private string PasswordHashField;
        
        private System.Nullable<System.DateTime> RegistrationTimeField;
        
        private string UserIdField;
        
        private string UsernameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountID {
            get {
                return this.AccountIDField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountIDField, value) != true)) {
                    this.AccountIDField = value;
                    this.RaisePropertyChanged("AccountID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> EmailConfirmed {
            get {
                return this.EmailConfirmedField;
            }
            set {
                if ((this.EmailConfirmedField.Equals(value) != true)) {
                    this.EmailConfirmedField = value;
                    this.RaisePropertyChanged("EmailConfirmed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PasswordHash {
            get {
                return this.PasswordHashField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordHashField, value) != true)) {
                    this.PasswordHashField = value;
                    this.RaisePropertyChanged("PasswordHash");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> RegistrationTime {
            get {
                return this.RegistrationTimeField;
            }
            set {
                if ((this.RegistrationTimeField.Equals(value) != true)) {
                    this.RegistrationTimeField = value;
                    this.RaisePropertyChanged("RegistrationTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIdField, value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="user", Namespace="http://schemas.datacontract.org/2004/07/SqlService")]
    public partial class user : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string AccountIDField;
        
        private string DetailsIDField;
        
        private string FirstNameField;
        
        private string GroupIDField;
        
        private bool IsStudentField;
        
        private string LastNameField;
        
        private string MiddleNameField;
        
        private byte[] ProfilePhotoField;
        
        private string UserIDField;
        
        private Button.SqlReference.account accountField;
        
        private Button.SqlReference.details detailsField;
        
        private Button.SqlReference.group groupField;
        
        private System.Collections.ObjectModel.ObservableCollection<Button.SqlReference.reply> replyField;
        
        private System.Collections.ObjectModel.ObservableCollection<Button.SqlReference.reply> reply1Field;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountID {
            get {
                return this.AccountIDField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountIDField, value) != true)) {
                    this.AccountIDField = value;
                    this.RaisePropertyChanged("AccountID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DetailsID {
            get {
                return this.DetailsIDField;
            }
            set {
                if ((object.ReferenceEquals(this.DetailsIDField, value) != true)) {
                    this.DetailsIDField = value;
                    this.RaisePropertyChanged("DetailsID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GroupID {
            get {
                return this.GroupIDField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupIDField, value) != true)) {
                    this.GroupIDField = value;
                    this.RaisePropertyChanged("GroupID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsStudent {
            get {
                return this.IsStudentField;
            }
            set {
                if ((this.IsStudentField.Equals(value) != true)) {
                    this.IsStudentField = value;
                    this.RaisePropertyChanged("IsStudent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MiddleName {
            get {
                return this.MiddleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MiddleNameField, value) != true)) {
                    this.MiddleNameField = value;
                    this.RaisePropertyChanged("MiddleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] ProfilePhoto {
            get {
                return this.ProfilePhotoField;
            }
            set {
                if ((object.ReferenceEquals(this.ProfilePhotoField, value) != true)) {
                    this.ProfilePhotoField = value;
                    this.RaisePropertyChanged("ProfilePhoto");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIDField, value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Button.SqlReference.account account {
            get {
                return this.accountField;
            }
            set {
                if ((object.ReferenceEquals(this.accountField, value) != true)) {
                    this.accountField = value;
                    this.RaisePropertyChanged("account");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Button.SqlReference.details details {
            get {
                return this.detailsField;
            }
            set {
                if ((object.ReferenceEquals(this.detailsField, value) != true)) {
                    this.detailsField = value;
                    this.RaisePropertyChanged("details");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Button.SqlReference.group group {
            get {
                return this.groupField;
            }
            set {
                if ((object.ReferenceEquals(this.groupField, value) != true)) {
                    this.groupField = value;
                    this.RaisePropertyChanged("group");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Button.SqlReference.reply> reply {
            get {
                return this.replyField;
            }
            set {
                if ((object.ReferenceEquals(this.replyField, value) != true)) {
                    this.replyField = value;
                    this.RaisePropertyChanged("reply");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Button.SqlReference.reply> reply1 {
            get {
                return this.reply1Field;
            }
            set {
                if ((object.ReferenceEquals(this.reply1Field, value) != true)) {
                    this.reply1Field = value;
                    this.RaisePropertyChanged("reply1");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="account", Namespace="http://schemas.datacontract.org/2004/07/SqlService")]
    public partial class account : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string AccountIDField;
        
        private string EmailField;
        
        private System.Nullable<bool> EmailConfirmedField;
        
        private string PasswordHashField;
        
        private System.Nullable<System.DateTime> RegistrationTimeField;
        
        private string UsernameField;
        
        private System.Collections.ObjectModel.ObservableCollection<Button.SqlReference.user> userField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountID {
            get {
                return this.AccountIDField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountIDField, value) != true)) {
                    this.AccountIDField = value;
                    this.RaisePropertyChanged("AccountID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> EmailConfirmed {
            get {
                return this.EmailConfirmedField;
            }
            set {
                if ((this.EmailConfirmedField.Equals(value) != true)) {
                    this.EmailConfirmedField = value;
                    this.RaisePropertyChanged("EmailConfirmed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PasswordHash {
            get {
                return this.PasswordHashField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordHashField, value) != true)) {
                    this.PasswordHashField = value;
                    this.RaisePropertyChanged("PasswordHash");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> RegistrationTime {
            get {
                return this.RegistrationTimeField;
            }
            set {
                if ((this.RegistrationTimeField.Equals(value) != true)) {
                    this.RegistrationTimeField = value;
                    this.RaisePropertyChanged("RegistrationTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Button.SqlReference.user> user {
            get {
                return this.userField;
            }
            set {
                if ((object.ReferenceEquals(this.userField, value) != true)) {
                    this.userField = value;
                    this.RaisePropertyChanged("user");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="details", Namespace="http://schemas.datacontract.org/2004/07/SqlService")]
    public partial class details : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ConnectionEmailField;
        
        private string ConnectionLinkField;
        
        private string DetailsIDField;
        
        private string HseLinkField;
        
        private string PhoneNumberField;
        
        private System.Collections.ObjectModel.ObservableCollection<Button.SqlReference.user> userField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConnectionEmail {
            get {
                return this.ConnectionEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.ConnectionEmailField, value) != true)) {
                    this.ConnectionEmailField = value;
                    this.RaisePropertyChanged("ConnectionEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConnectionLink {
            get {
                return this.ConnectionLinkField;
            }
            set {
                if ((object.ReferenceEquals(this.ConnectionLinkField, value) != true)) {
                    this.ConnectionLinkField = value;
                    this.RaisePropertyChanged("ConnectionLink");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DetailsID {
            get {
                return this.DetailsIDField;
            }
            set {
                if ((object.ReferenceEquals(this.DetailsIDField, value) != true)) {
                    this.DetailsIDField = value;
                    this.RaisePropertyChanged("DetailsID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HseLink {
            get {
                return this.HseLinkField;
            }
            set {
                if ((object.ReferenceEquals(this.HseLinkField, value) != true)) {
                    this.HseLinkField = value;
                    this.RaisePropertyChanged("HseLink");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhoneNumber {
            get {
                return this.PhoneNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneNumberField, value) != true)) {
                    this.PhoneNumberField = value;
                    this.RaisePropertyChanged("PhoneNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Button.SqlReference.user> user {
            get {
                return this.userField;
            }
            set {
                if ((object.ReferenceEquals(this.userField, value) != true)) {
                    this.userField = value;
                    this.RaisePropertyChanged("user");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="group", Namespace="http://schemas.datacontract.org/2004/07/SqlService")]
    public partial class group : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string EduprogramIDField;
        
        private int FoundationYearField;
        
        private string GroupIDField;
        
        private string GroupNameField;
        
        private Button.SqlReference.eduprogram eduprogramField;
        
        private System.Collections.ObjectModel.ObservableCollection<Button.SqlReference.user> userField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EduprogramID {
            get {
                return this.EduprogramIDField;
            }
            set {
                if ((object.ReferenceEquals(this.EduprogramIDField, value) != true)) {
                    this.EduprogramIDField = value;
                    this.RaisePropertyChanged("EduprogramID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FoundationYear {
            get {
                return this.FoundationYearField;
            }
            set {
                if ((this.FoundationYearField.Equals(value) != true)) {
                    this.FoundationYearField = value;
                    this.RaisePropertyChanged("FoundationYear");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GroupID {
            get {
                return this.GroupIDField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupIDField, value) != true)) {
                    this.GroupIDField = value;
                    this.RaisePropertyChanged("GroupID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GroupName {
            get {
                return this.GroupNameField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupNameField, value) != true)) {
                    this.GroupNameField = value;
                    this.RaisePropertyChanged("GroupName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Button.SqlReference.eduprogram eduprogram {
            get {
                return this.eduprogramField;
            }
            set {
                if ((object.ReferenceEquals(this.eduprogramField, value) != true)) {
                    this.eduprogramField = value;
                    this.RaisePropertyChanged("eduprogram");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Button.SqlReference.user> user {
            get {
                return this.userField;
            }
            set {
                if ((object.ReferenceEquals(this.userField, value) != true)) {
                    this.userField = value;
                    this.RaisePropertyChanged("user");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="reply", Namespace="http://schemas.datacontract.org/2004/07/SqlService")]
    public partial class reply : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string RecipientField;
        
        private string ReplyCollectionIDField;
        
        private string ReplyIDField;
        
        private string SenderField;
        
        private Button.SqlReference.replyCollection replyCollectionField;
        
        private Button.SqlReference.user userField;
        
        private Button.SqlReference.user user1Field;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Recipient {
            get {
                return this.RecipientField;
            }
            set {
                if ((object.ReferenceEquals(this.RecipientField, value) != true)) {
                    this.RecipientField = value;
                    this.RaisePropertyChanged("Recipient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReplyCollectionID {
            get {
                return this.ReplyCollectionIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ReplyCollectionIDField, value) != true)) {
                    this.ReplyCollectionIDField = value;
                    this.RaisePropertyChanged("ReplyCollectionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReplyID {
            get {
                return this.ReplyIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ReplyIDField, value) != true)) {
                    this.ReplyIDField = value;
                    this.RaisePropertyChanged("ReplyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Sender {
            get {
                return this.SenderField;
            }
            set {
                if ((object.ReferenceEquals(this.SenderField, value) != true)) {
                    this.SenderField = value;
                    this.RaisePropertyChanged("Sender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Button.SqlReference.replyCollection replyCollection {
            get {
                return this.replyCollectionField;
            }
            set {
                if ((object.ReferenceEquals(this.replyCollectionField, value) != true)) {
                    this.replyCollectionField = value;
                    this.RaisePropertyChanged("replyCollection");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Button.SqlReference.user user {
            get {
                return this.userField;
            }
            set {
                if ((object.ReferenceEquals(this.userField, value) != true)) {
                    this.userField = value;
                    this.RaisePropertyChanged("user");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Button.SqlReference.user user1 {
            get {
                return this.user1Field;
            }
            set {
                if ((object.ReferenceEquals(this.user1Field, value) != true)) {
                    this.user1Field = value;
                    this.RaisePropertyChanged("user1");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="eduprogram", Namespace="http://schemas.datacontract.org/2004/07/SqlService")]
    public partial class eduprogram : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string EduprogramIDField;
        
        private string EduprogramNameField;
        
        private string FacultyIDField;
        
        private Button.SqlReference.faculty facultyField;
        
        private System.Collections.ObjectModel.ObservableCollection<Button.SqlReference.group> groupField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EduprogramID {
            get {
                return this.EduprogramIDField;
            }
            set {
                if ((object.ReferenceEquals(this.EduprogramIDField, value) != true)) {
                    this.EduprogramIDField = value;
                    this.RaisePropertyChanged("EduprogramID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EduprogramName {
            get {
                return this.EduprogramNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EduprogramNameField, value) != true)) {
                    this.EduprogramNameField = value;
                    this.RaisePropertyChanged("EduprogramName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacultyID {
            get {
                return this.FacultyIDField;
            }
            set {
                if ((object.ReferenceEquals(this.FacultyIDField, value) != true)) {
                    this.FacultyIDField = value;
                    this.RaisePropertyChanged("FacultyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Button.SqlReference.faculty faculty {
            get {
                return this.facultyField;
            }
            set {
                if ((object.ReferenceEquals(this.facultyField, value) != true)) {
                    this.facultyField = value;
                    this.RaisePropertyChanged("faculty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Button.SqlReference.group> group {
            get {
                return this.groupField;
            }
            set {
                if ((object.ReferenceEquals(this.groupField, value) != true)) {
                    this.groupField = value;
                    this.RaisePropertyChanged("group");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="faculty", Namespace="http://schemas.datacontract.org/2004/07/SqlService")]
    public partial class faculty : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string FacultyIDField;
        
        private string FacultyNameField;
        
        private System.Collections.ObjectModel.ObservableCollection<Button.SqlReference.eduprogram> eduprogramField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacultyID {
            get {
                return this.FacultyIDField;
            }
            set {
                if ((object.ReferenceEquals(this.FacultyIDField, value) != true)) {
                    this.FacultyIDField = value;
                    this.RaisePropertyChanged("FacultyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacultyName {
            get {
                return this.FacultyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FacultyNameField, value) != true)) {
                    this.FacultyNameField = value;
                    this.RaisePropertyChanged("FacultyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Button.SqlReference.eduprogram> eduprogram {
            get {
                return this.eduprogramField;
            }
            set {
                if ((object.ReferenceEquals(this.eduprogramField, value) != true)) {
                    this.eduprogramField = value;
                    this.RaisePropertyChanged("eduprogram");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="replyCollection", Namespace="http://schemas.datacontract.org/2004/07/SqlService")]
    public partial class replyCollection : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool IsBadField;
        
        private string ReplyCollectionIDField;
        
        private string TextField;
        
        private System.Collections.ObjectModel.ObservableCollection<Button.SqlReference.reply> replyField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsBad {
            get {
                return this.IsBadField;
            }
            set {
                if ((this.IsBadField.Equals(value) != true)) {
                    this.IsBadField = value;
                    this.RaisePropertyChanged("IsBad");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReplyCollectionID {
            get {
                return this.ReplyCollectionIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ReplyCollectionIDField, value) != true)) {
                    this.ReplyCollectionIDField = value;
                    this.RaisePropertyChanged("ReplyCollectionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text {
            get {
                return this.TextField;
            }
            set {
                if ((object.ReferenceEquals(this.TextField, value) != true)) {
                    this.TextField = value;
                    this.RaisePropertyChanged("Text");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Button.SqlReference.reply> reply {
            get {
                return this.replyField;
            }
            set {
                if ((object.ReferenceEquals(this.replyField, value) != true)) {
                    this.replyField = value;
                    this.RaisePropertyChanged("reply");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SqlReference.IWebService")]
    public interface IWebService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebService/GetUsers", ReplyAction="http://tempuri.org/IWebService/GetUsersResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<Button.SqlReference.user>> GetUsersAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWebServiceChannel : Button.SqlReference.IWebService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WebServiceClient : System.ServiceModel.ClientBase<Button.SqlReference.IWebService>, Button.SqlReference.IWebService {
        
        public WebServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<Button.SqlReference.user>> GetUsersAsync() {
            return base.Channel.GetUsersAsync();
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync() {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync() {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SqlReference.IService")]
    public interface IService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SignUp", ReplyAction="http://tempuri.org/IService/SignUpResponse")]
        System.Threading.Tasks.Task<bool> SignUpAsync(Button.SqlReference.AccountInformation account);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetTitle", ReplyAction="http://tempuri.org/IService/GetTitleResponse")]
        System.Threading.Tasks.Task<string> GetTitleAsync(string user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SetPhoto", ReplyAction="http://tempuri.org/IService/SetPhotoResponse")]
        System.Threading.Tasks.Task<bool> SetPhotoAsync(string user, byte[] photo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetPhoto", ReplyAction="http://tempuri.org/IService/GetPhotoResponse")]
        System.Threading.Tasks.Task<byte[]> GetPhotoAsync(string user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetUsersDictionary", ReplyAction="http://tempuri.org/IService/GetUsersDictionaryResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetUsersDictionaryAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Login", ReplyAction="http://tempuri.org/IService/LoginResponse")]
        System.Threading.Tasks.Task<Button.SqlReference.AccountInformation> LoginAsync(string login, string passwordHash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetPositiveReplies", ReplyAction="http://tempuri.org/IService/GetPositiveRepliesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetPositiveRepliesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetNegativeReplies", ReplyAction="http://tempuri.org/IService/GetNegativeRepliesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetNegativeRepliesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddReplies", ReplyAction="http://tempuri.org/IService/AddRepliesResponse")]
        System.Threading.Tasks.Task<bool> AddRepliesAsync(string sender, string reciever, bool isBad, System.Collections.Generic.Dictionary<string, string> replies);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetRepliesCount", ReplyAction="http://tempuri.org/IService/GetRepliesCountResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetRepliesCountAsync(string recepient);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetMobilePhone", ReplyAction="http://tempuri.org/IService/GetMobilePhoneResponse")]
        System.Threading.Tasks.Task<string> GetMobilePhoneAsync(string userid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetEmail", ReplyAction="http://tempuri.org/IService/GetEmailResponse")]
        System.Threading.Tasks.Task<string> GetEmailAsync(string userid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SetMobilePhone", ReplyAction="http://tempuri.org/IService/SetMobilePhoneResponse")]
        System.Threading.Tasks.Task SetMobilePhoneAsync(string userid, string mobilePhone);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SetEmail", ReplyAction="http://tempuri.org/IService/SetEmailResponse")]
        System.Threading.Tasks.Task SetEmailAsync(string userid, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetFreeUsersDictionary", ReplyAction="http://tempuri.org/IService/GetFreeUsersDictionaryResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetFreeUsersDictionaryAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceChannel : Button.SqlReference.IService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceClient : System.ServiceModel.ClientBase<Button.SqlReference.IService>, Button.SqlReference.IService {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public ServiceClient() : 
                base(ServiceClient.GetDefaultBinding(), ServiceClient.GetDefaultEndpointAddress()) {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_IService.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ServiceClient(EndpointConfiguration endpointConfiguration) : 
                base(ServiceClient.GetBindingForEndpoint(endpointConfiguration), ServiceClient.GetEndpointAddress(endpointConfiguration)) {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ServiceClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(ServiceClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress)) {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ServiceClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(ServiceClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress) {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Threading.Tasks.Task<bool> SignUpAsync(Button.SqlReference.AccountInformation account) {
            return base.Channel.SignUpAsync(account);
        }
        
        public System.Threading.Tasks.Task<string> GetTitleAsync(string user) {
            return base.Channel.GetTitleAsync(user);
        }
        
        public System.Threading.Tasks.Task<bool> SetPhotoAsync(string user, byte[] photo) {
            return base.Channel.SetPhotoAsync(user, photo);
        }
        
        public System.Threading.Tasks.Task<byte[]> GetPhotoAsync(string user) {
            return base.Channel.GetPhotoAsync(user);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetUsersDictionaryAsync() {
            return base.Channel.GetUsersDictionaryAsync();
        }
        
        public System.Threading.Tasks.Task<Button.SqlReference.AccountInformation> LoginAsync(string login, string passwordHash) {
            return base.Channel.LoginAsync(login, passwordHash);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetPositiveRepliesAsync() {
            return base.Channel.GetPositiveRepliesAsync();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetNegativeRepliesAsync() {
            return base.Channel.GetNegativeRepliesAsync();
        }
        
        public System.Threading.Tasks.Task<bool> AddRepliesAsync(string sender, string reciever, bool isBad, System.Collections.Generic.Dictionary<string, string> replies) {
            return base.Channel.AddRepliesAsync(sender, reciever, isBad, replies);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetRepliesCountAsync(string recepient) {
            return base.Channel.GetRepliesCountAsync(recepient);
        }
        
        public System.Threading.Tasks.Task<string> GetMobilePhoneAsync(string userid) {
            return base.Channel.GetMobilePhoneAsync(userid);
        }
        
        public System.Threading.Tasks.Task<string> GetEmailAsync(string userid) {
            return base.Channel.GetEmailAsync(userid);
        }
        
        public System.Threading.Tasks.Task SetMobilePhoneAsync(string userid, string mobilePhone) {
            return base.Channel.SetMobilePhoneAsync(userid, mobilePhone);
        }
        
        public System.Threading.Tasks.Task SetEmailAsync(string userid, string email) {
            return base.Channel.SetEmailAsync(userid, email);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetFreeUsersDictionaryAsync() {
            return base.Channel.GetFreeUsersDictionaryAsync();
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync() {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync() {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IService)) {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IService)) {
                return new System.ServiceModel.EndpointAddress("http://localhost:57806/Service.svc");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding() {
            return ServiceClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_IService);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress() {
            return ServiceClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_IService);
        }
        
        public enum EndpointConfiguration {
            
            BasicHttpBinding_IService,
        }
    }
}
